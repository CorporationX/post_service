spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: post_service
    properties:
      spring.json.trusted.packages: '*'
    batch-size: 1000
    topics:
      post:
        name: post_topic

  data:
    redis:
      port: 6379
      host: localhost
      channels:
        comment_channel:
          name: comment_channel
        like_channel:
          name: like_channel
        user_ban_channel:
          name: user_ban

  mvc:
    servlet:
      path: /api/v1

server:
  port: 8081

logging:
  level:
    root: info

post:
  publisher:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute #TODO: не используется, но может потом пригодится
  ad-remover:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute #TODO: не используется, если нет, то удалить

payment-service:
  host: localhost
  port: 9080
project-service:
  host: localhost
  port: 8082
user-service:
  host: localhost
  port: 8080

scheduled:
  author-banner: "@daily"

limits:
  unverified_post_limit: 5

feed:
  batch: 20