spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 8MB
      enabled: true

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      port: 6379
      host: localhost
      TTL: 86400
      max-comments-size: 3
      feed:
        batch-size: 20
        max-feed-size: 500
        TTL: 3
        prefix: feed
      channels:
        calculations_channel: calculations_channel
        like: like_channel
        post: post_channel

  aws:
    s3:
      endpoint: http://localhost:9000 # or 'default' , then will be use default s3 url
      accessKey: user
      secretKey: password
      region: us-east-1

  kafka:
    bootstrap-servers: localhost:9092
    topic-name:
      posts: posts
      comments: comments
      likes: likes
      post-views: post_views
      feed-heater: feed_heater
    producer:
      idempotence: true
    consumer:
      group-id: posts-group-id
      deserializer-trusted-packages:
        "java.util,java.lang,faang.school.postservice.dto.publishable"
      backoff:
        interval: 5000
        max-attempts: 5

server:
  port: 8081

logging:
  level:
    root: info

post:
  thread-pool:
    size: 10
    task-timeout: 5 # in second
  validation-param:
    obsolescence-period-date-publication: 5 # in minute
    max-post-resource: 10
  publisher:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute
  ad-remover:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute

resource:
  post-resource-bucket: post-resource-bucket
  max-width-landscape: 1080
  max-height-landscape: 566
  max-dimension-square: 1080

comment:
  verify:
    cron: "*/10 * * * * *" # every 10 minutes
  batchSize: 100
  thread-pool-size: 4
  word-split-regex: "(?<=\\p{L})(?=\\p{Punct})|(?<=\\p{Punct})(?=\\p{L})|(?<=\\p{L})(?=\\p{L}\\b)|\\s+"

like:
  userBatchSize: 100

news-feed:
  pool:
    thread-count: 10

user-service:
  host: localhost
  port: 8080
project-service:
  host: localhost
  port: 8082
payment-service:
  host: localhost
  port: 9080

#springdoc:
#  api-docs:
#    path: /docs
#  swagger-ui:
#    path: /swagger-ui.html