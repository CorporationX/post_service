spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 8MB
      enabled: true

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      port: 6379
      host: localhost
      channels:
        calculations_channel: calculations_channel
        like: like_channel
        post: post_channel
      cache:
        feed:
          maxSize: 500
          pageSize: 20
          showLastComments: 3
        ttl:
          post: 86400
          user: 86400

    kafka:
      bootstrap-servers: kafka:9092
      topics:
        post:
          name: post
          partitions: 3
          replicas: 1
        delete-post:
          name: delete-post
          partitions: 3
          replicas: 1
        comment:
          name: comment
          partitions: 3
          replicas: 1
        delete-comment:
          name: delete-comment
          partitions: 3
          replicas: 1
        like:
          name: like
          partitions: 3
          replicas: 1
        unlike:
          name: unlike
          partitions: 3
          replicas: 1
        feed-heater:
          name: feed-heater
          partitions: 3
          replicas: 1
      producer:
        retries: 3
        retry-backoff-ms: 1000
      consumer:
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        properties:
          spring.json.trusted.packages: 'faang.school.postservice.dto'
          spring.json.use.type.headers: false
        groups:
          post: postGroup
          comment: commentGroup
          like: likeGroup
      listener:
        missing-topics-fatal: false

  aws:
    s3:
      endpoint: http://localhost:9000 # or 'default' , then will be use default s3 url
      accessKey: user
      secretKey: password
      region: us-east-1



server:
  port: 8081

logging:
  level:
    root: info

post:
  thread-pool:
    size: 10
    task-timeout: 5 # in second
  validation-param:
    obsolescence-period-date-publication: 5 # in minute
    max-post-resource: 10
  publisher:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute
  ad-remover:
    scheduler:
      cron: "0 0/1 * 1/1 * ?" # every minute

resource:
  post-resource-bucket: post-resource-bucket
  max-width-landscape: 1080
  max-height-landscape: 566
  max-dimension-square: 1080

comment:
  verify:
    cron: "*/10 * * * * *" # every 10 minutes
  batchSize: 100
  thread-pool-size: 4
  word-split-regex: "(?<=\\p{L})(?=\\p{Punct})|(?<=\\p{Punct})(?=\\p{L})|(?<=\\p{L})(?=\\p{L}\\b)|\\s+"

like:
  userBatchSize: 100

user-service:
  host: localhost
  port: 8080
project-service:
  host: localhost
  port: 8082
payment-service:
  host: localhost
  port: 9080

feed:
  kafka:
    subscribers-batch-size: 1000
  async:
    pool_size: 8
    queue_capacity: 50

feed-heater:
  pageSize:
  postLimit:

feign:
  client:
    config:
      default:
        retryer:
          enabled: true

#springdoc:
#  api-docs:
#    path: /docs
#  swagger-ui:
#    path: /swagger-ui.html